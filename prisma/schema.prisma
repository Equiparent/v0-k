datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  children      Child[]
  parentalUnit  ParentalUnit? @relation(fields: [parentalUnitId], references: [id])
  parentalUnitId String?
}

model Child {
  id            String    @id @default(cuid())
  name          String
  birthDate     DateTime
  email         String?
  phone         String?
  parentalUnitId String
  parentalUnit   ParentalUnit @relation(fields: [parentalUnitId], references: [id])
  createdBy     String
  user          User     @relation(fields: [createdBy], references: [id])
}

model ParentalUnit {
  id            String    @id @default(cuid())
  users         User[]
  children      Child[]
  custodySchedule CustodySchedule?
}

model CustodySchedule {
  id            String    @id @default(cuid())
  parentalUnitId String   @unique
  parentalUnit   ParentalUnit @relation(fields: [parentalUnitId], references: [id])
  schedule      Json
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

